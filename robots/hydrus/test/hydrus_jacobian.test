<launch>
  <arg name="gui" default="True"/>
  <arg name="rostest" default="True"/>
  <arg name="robot_ns" default="hydrus"/>
  <arg name="onboards_model" default="old_model_tx2_zed_201810" />

  <include file="$(find aerial_robot_model)/launch/aerial_robot_model.launch" >
    <arg name="robot_ns" value="$(arg robot_ns)" />
    <arg name="robot_model" value="$(find hydrus)/robots/quad/$(arg onboards_model)/robot.urdf.xacro" />
    <arg name="need_joint_state" value="$(eval not rostest)"/>
  </include >


  <!-- test codes -->
  <group if="$(arg rostest)">
    <node pkg="rostopic" type="rostopic" name="joint_state" ns="$(arg robot_ns)"
          args="pub -r 1 joint_states sensor_msgs/JointState
                '{name: [joint1, joint2, joint3],
                position: [-1.5708, 1.5708, 1.5708]}'" />

    <test test-name="hydrus_jacobian_test" pkg="hydrus" type="hydrus_jacobian_test" ns="$(arg robot_ns)" time-limit="10">
      <param name="rostest" value="$(arg rostest)" />
      <param name="delta" value="0.000001" />
    </test>
  </group>

  <group unless="$(arg rostest)">
    <node name="hydrus_jacobian_test_node" pkg="hydrus" type="hydrus_jacobian_test" ns="$(arg robot_ns)" output="screen">
      <param name="rostest" value="$(arg rostest)" />
      <param name="delta" value="0.000001" />
      <param name="check_thrust_force" value="true" />
      <param name="check_joint_torque" value="true" />
      <param name="check_cog_motion" value="true" />
      <param name="check_feasible_control" value="true" />
      <param name="check_feasible_control_roll_pitch" value="true" />
    </node>
  </group>

</launch>
