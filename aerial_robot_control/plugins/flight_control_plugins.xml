<library path="lib/libflight_control_pluginlib">

  <class name="aerial_robot_control/fully_actuated_controller" type="aerial_robot_control::FullyActuatedController" base_class_type="aerial_robot_control::ControlBase">
    <description>controller for fully actuated model (e.g., tilted hex) </description>
  </class>

  <class name="aerial_robot_control/under_actuated_controller" type="aerial_robot_control::UnderActuatedController" base_class_type="aerial_robot_control::ControlBase">
    <description>controller for under actuated model (e.g., quad) </description>
  </class>

  <class name="aerial_robot_control/under_actuated_lqi_controller" type="aerial_robot_control::UnderActuatedLQIController" base_class_type="aerial_robot_control::ControlBase">
    <description>controller for under actuated model (e.g., quad) with LQI controller </description>
  </class>

  <class name="aerial_robot_control/under_actuated_tilted_lqi_controller" type="aerial_robot_control::UnderActuatedTiltedLQIController" base_class_type="aerial_robot_control::ControlBase">
    <description>controller for under actuated model (e.g., quad) with LQI Tilted controller </description>
  </class>

<!--  quadrotor -->
  <class name="aerial_robot_control/under_act_body_rate/nmpc_controller" type="aerial_robot_control::nmpc_under_act_body_rate::NMPCController" base_class_type="aerial_robot_control::ControlBase">
      <description>NMPC controller for quadrotor with body rate model </description>
  </class>

  <class name="aerial_robot_control/nmpc_controller/fix_qd/nmpc" type="aerial_robot_control::nmpc::FixQdNMPC" base_class_type="aerial_robot_control::ControlBase">
      <description>NMPC controller for quadrotor with full model </description>
  </class>

<!-- tiltable quadrotor -->
  <class name="aerial_robot_control/tilt_qd_no_servo_mdl/nmpc_controller" type="aerial_robot_control::nmpc_over_act_no_servo_delay::NMPCController" base_class_type="aerial_robot_control::ControlBase">
      <description>NMPC controller for beetle with no servo delay model </description>
  </class>

  <!-- servo -->
  <class name="aerial_robot_control/nmpc_controller/tilt_qd/servo_nmpc" type="aerial_robot_control::nmpc::TiltQdServoNMPC" base_class_type="aerial_robot_control::ControlBase">
      <description>NMPC controller for beetle with full model </description>
  </class>

  <class name="aerial_robot_control/nmpc_controller/tilt_qd/servo_dist_nmpc" type="aerial_robot_control::nmpc::TiltQdServoDistNMPC" base_class_type="aerial_robot_control::ControlBase">
      <description>NMPC controller for beetle with full model and consider disturbance </description>
  </class>

  <!-- servo & thrust -->
  <class name="aerial_robot_control/nmpc_controller/tilt_qd/servo_thrust_dist_nmpc" type="aerial_robot_control::nmpc::TiltQdServoThrustDistNMPC" base_class_type="aerial_robot_control::ControlBase">
    <description>NMPC controller for beetle with full model and consider disturbance </description>
  </class>

  <class name="aerial_robot_control/nmpc_controller/tilt_qd/servo_thrust_nmpc_w_indi" type="aerial_robot_control::nmpc::TiltQdServoThrustNMPCwINDI" base_class_type="aerial_robot_control::ControlBase">
    <description>NMPC controller for beetle with full model, considering servo and thrust. Use INDI for disturbance rejection. </description>
  </class>

<!-- tiltable birotor -->
  <class name="aerial_robot_control/nmpc_controller/tilt_bi/servo_nmpc" type="aerial_robot_control::nmpc::TiltBiServoNMPC" base_class_type="aerial_robot_control::ControlBase">
    <description>NMPC controller for tilt bi </description>
  </class>

  <class name="aerial_robot_control/nmpc_controller/tilt_bi/2_ord_servo_nmpc" type="aerial_robot_control::nmpc::TiltBi2OrdServoNMPC" base_class_type="aerial_robot_control::ControlBase">
    <description>NMPC controller for tilt bi considering 2-ord servo model </description>
  </class>

</library>
